<?xml version="1.0"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure_9_0.dtd">

<!-- =============================================================== -->
<!-- Documentation of this file format can be found at:              -->
<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
<!--                                                                 -->
<!-- Additional configuration files are available in $JETTY_HOME/etc -->
<!-- and can be mixed in. See start.ini file for the default         -->
<!-- configuration files.                                            -->
<!--                                                                 -->
<!-- For a description of the configuration mechanism, see the       -->
<!-- output of:                                                      -->
<!--   java -jar start.jar -?                                        -->
<!-- =============================================================== -->

<!-- =============================================================== -->
<!-- Configure a Jetty Server instance with an ID "Server"           -->
<!-- Other configuration files may also configure the "Server"       -->
<!-- ID, in which case they are adding configuration to the same     -->
<!-- instance.  If other configuration have a different ID, they     -->
<!-- will create and configure another instance of Jetty.            -->
<!-- Consult the javadoc of o.e.j.server.Server for all              -->
<!-- configuration that may be set here.                             -->
<!-- =============================================================== -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">

    <!-- =========================================================== -->
    <!-- Configure the Server Thread Pool.                           -->
    <!-- The server holds a common thread pool which is used by      -->
    <!-- default as the executor used by all connectors and servlet  -->
    <!-- dispatches.                                                 -->
    <!--                                                             -->
    <!-- Configuring a fixed thread pool is vital to controlling the -->
    <!-- maximal memory footprint of the server and is a key tuning  -->
    <!-- parameter for tuning.  In an application that rarely blocks -->
    <!-- then maximal threads may be close to the number of 5*CPUs.  -->
    <!-- In an application that frequently blocks, then maximal      -->
    <!-- threads should be set as high as possible given the memory  -->
    <!-- available.                                                  -->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool   -->
    <!-- for all configuration that may be set here.                 -->
    <!-- =========================================================== -->
    <Arg name="threadpool">
      <New id="threadpool" class="org.eclipse.jetty.util.thread.QueuedThreadPool">
        <Set name="minThreads">10</Set>
        <Set name="maxThreads">200</Set>
        <Set name="detailedDump">false</Set>
      </New>
    </Arg>

    <!-- =========================================================== -->
    <!-- Add shared Scheduler instance                               -->
    <!-- =========================================================== -->
    <Call name="addBean">
      <Arg>
        <New class="org.eclipse.jetty.util.thread.ScheduledExecutorScheduler"/>
      </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Http Configuration.                                         -->
    <!-- This is a common configuration instance used by all         -->
    <!-- connectors that can carry HTTP semantics (HTTP, HTTPS, SPDY)-->
    <!-- It configures the non wire protocol aspects of the HTTP     -->
    <!-- semantic.                                                   -->
    <!--                                                             -->
    <!-- This configuration is only defined here and is used by      -->
    <!-- reference from the jetty-http.xml, jetty-https.xml and      -->
    <!-- jetty-spdy.xml configuration files which instantiate the    -->
    <!-- connectors.                                                 -->
    <!--                                                             -->
    <!-- Consult the javadoc of o.e.j.server.HttpConfiguration       -->
    <!-- for all configuration that may be set here.                 -->
    <!-- =========================================================== -->
    <New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
      <Set name="secureScheme">https</Set>
      <Set name="securePort"><Property name="jetty.tls.port" default="8443" /></Set>
      <Set name="outputBufferSize">32768</Set>
      <Set name="requestHeaderSize">8192</Set>
      <Set name="responseHeaderSize">8192</Set>
      <Set name="sendServerVersion">true</Set>
      <Set name="sendDateHeader">false</Set>
      <Set name="headerCacheSize">512</Set>

      <!-- Uncomment to enable handling of X-Forwarded- style headers
      <Call name="addCustomizer">
        <Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
      </Call>
      -->
    </New>


    <!-- =========================================================== -->
    <!-- Set the default handler structure for the Server            -->
    <!-- A handler collection is used to pass received requests to   -->
    <!-- both the ContextHandlerCollection, which selects the next   -->
    <!-- handler by context path and virtual host, and the           -->
    <!-- DefaultHandler, which handles any requests not handled by   -->
    <!-- the context handlers.                                       -->
    <!-- Other handlers may be added to the "Handlers" collection,   -->
    <!-- for example the jetty-requestlog.xml file adds the          -->
    <!-- RequestLogHandler after the default handler                 -->
    <!-- =========================================================== -->
    <Set name="handler">
      <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
        <Set name="handlers">
         <Array type="org.eclipse.jetty.server.Handler">
           <Item>
             <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
           </Item>
           <Item>
             <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler"/>
           </Item>
         </Array>
        </Set>
      </New>
    </Set>

    <!-- =========================================================== -->
    <!-- extra server options                                        -->
    <!-- =========================================================== -->
    <Set name="stopAtShutdown">true</Set>
    <Set name="stopTimeout">5000</Set>
    <Set name="dumpAfterStart">false</Set>
    <Set name="dumpBeforeStop">false</Set>

  <!-- The above is from distributed jetty.xml.
     The following is from jetty-spdy.xml
    -->
  <!-- =========================================================== -->
  <!-- Setup the SSL Context factory used to establish all TLS     -->
  <!-- Connections and session.                                    -->
  <!--                                                             -->
  <!-- Consult the javadoc of o.e.j.util.ssl.SslContextFactory     -->
  <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
  <!-- that may be set here.                                       -->
  <!-- =========================================================== -->
  <New id="sslContextFactory" class="org.eclipse.jetty.util.ssl.SslContextFactory">
    <Set name="KeyStorePath"><Property name="jetty.home" default="." />/etc/keystore</Set>
    <Set name="KeyStorePassword">OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4</Set>
    <Set name="KeyManagerPassword">OBF:1u2u1wml1z7s1z7a1wnl1u2g</Set>
    <Set name="TrustStorePath"><Property name="jetty.home" default="." />/etc/keystore</Set>
    <Set name="TrustStorePassword">OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4</Set>
  </New>

  <!-- =========================================================== -->
  <!-- Enables NPN debugging on System.err                         -->
  <!-- ===========================================================
   <Set class="org.eclipse.jetty.npn.NextProtoNego" name="debug" type="boolean">true</Set>
  -->

  <!-- =========================================================== -->
  <!-- Create a TLS specific HttpConfiguration based on the        -->
  <!-- common HttpConfiguration defined in jetty.xml               -->
  <!-- Add a SecureRequestCustomizer to extract certificate and    -->
  <!-- session information                                         -->
  <!-- =========================================================== -->
  <New id="tlsHttpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
    <Arg><Ref refid="httpConfig"/></Arg>
    <Call name="addCustomizer">
      <Arg><New class="org.eclipse.jetty.server.SecureRequestCustomizer"/></Arg>
    </Call>
  </New>

  <!-- =========================================================== -->
  <!-- Create a push strategy which can be used by reference by    -->
  <!-- individual connection factories below.                      -->
  <!--                                                             -->
  <!-- Consult the javadoc of o.e.j.spdy.server.http.ReferrerPushStrategy -->
  <!-- for all configuration that may be set here.                 -->
  <!-- =========================================================== -->
  <New id="pushStrategy" class="org.eclipse.jetty.spdy.server.http.ReferrerPushStrategy">
    <!-- Uncomment to blacklist browsers for this push strategy. If one of the blacklisted Strings occurs in the
         user-agent header sent by the client, push will be disabled for this browser. This is case insensitive" -->
    <!--
    <Set name="UserAgentBlacklist">
        <Array type="String">
            <Item>.*(?i)firefox/14.*</Item>
            <Item>.*(?i)firefox/15.*</Item>
            <Item>.*(?i)firefox/16.*</Item>
        </Array>
    </Set>
    -->

    <!-- Uncomment to override default file extensions to push -->
    <!--
    <Set name="PushRegexps">
        <Array type="String">
           <Item>.*\.css</Item>
           <Item>.*\.js</Item>
           <Item>.*\.png</Item>
           <Item>.*\.jpg</Item>
           <Item>.*\.gif</Item>
       </Array>
    </Set>
    -->
    <Set name="referrerPushPeriod">5000</Set>
    <Set name="maxAssociatedResources">32</Set>
  </New>

  <!-- =========================================================== -->
  <!-- Add a SPDY/HTTPS Connector.                                 -->
  <!-- Configure an o.e.j.server.ServerConnector with connection   -->
  <!-- factories for TLS (aka SSL), NPN, SPDY and HTTP to provide  -->
  <!-- a connector that can accept HTTPS or SPDY connections.      -->
  <!--                                                             -->
  <!-- All accepted TLS connections are initially wired to a NPN   -->
  <!-- connection, which attempts to use a TLS extension to        -->
  <!-- negotiation the protocol.     If NPN is not supported by    -->
  <!-- the client, then the NPN connection is replaced by a HTTP   -->
  <!-- connection.  If a specific protocol version (eg spdy/3) is  -->
  <!-- negotiated by NPN, then the appropriate connection factory  -->
  <!-- is used to create a connection to replace the NPN connection-->
  <!--                                                             -->
  <!-- The final result is a SPDY or HTTP connection wired behind  -->
  <!-- a TLS (aka SSL) connection.                                 -->
  <!--                                                             -->
  <!-- Consult the javadoc of o.e.j.server.ServerConnector and the -->
  <!-- specific connection factory types for all configuration     -->
  <!-- that may be set here.                                       -->
  <!-- =========================================================== -->
  <Call id="sslConnector" name="addConnector">
    <Arg>
      <New class="org.eclipse.jetty.server.ServerConnector">
        <Arg name="server"><Ref refid="Server" /></Arg>
        <Arg name="factories">
          <Array type="org.eclipse.jetty.server.ConnectionFactory">

            <!-- SSL Connection factory with NPN as next protocol -->
            <Item>
              <New class="org.eclipse.jetty.server.SslConnectionFactory">
                <Arg name="next">npn</Arg>
                <Arg name="sslContextFactory"><Ref refid="sslContextFactory" /></Arg>
              </New>
            </Item>

            <!-- NPN Connection factory with HTTP as default protocol -->
            <Item>
              <New class="org.eclipse.jetty.spdy.server.NPNServerConnectionFactory">
                <Arg name="protocols"><Array type="String">
                    <Item>spdy/3</Item>
                    <Item>spdy/2</Item>
                    <Item>http/1.1</Item>
                </Array></Arg>
                <Set name="defaultProtocol">http/1.1</Set>
              </New>
            </Item>

            <!-- SPDY/3 Connection factory -->
            <Item>
              <New class="org.eclipse.jetty.spdy.server.http.HTTPSPDYServerConnectionFactory">
                <Arg name="version" type="int">3</Arg>
                <Arg name="config"><Ref refid="tlsHttpConfig" /></Arg>
                <Arg name="pushStrategy"><Ref refid="pushStrategy"/></Arg>
              </New>
            </Item>

            <!-- SPDY/2 Connection factory -->
            <Item>
              <New class="org.eclipse.jetty.spdy.server.http.HTTPSPDYServerConnectionFactory">
                <Arg name="version" type="int">2</Arg>
                <Arg name="config"><Ref refid="tlsHttpConfig" /></Arg>
              </New>
            </Item>

            <!-- HTTP Connection factory -->
            <Item>
              <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                <Arg name="config"><Ref refid="tlsHttpConfig" /></Arg>
              </New>
            </Item>
          </Array>
        </Arg>

        <Set name="host"><Property name="jetty.host" /></Set>
        <Set name="port"><Property name="jetty.tls.port" default="8443" /></Set>
        <Set name="idleTimeout">30000</Set>
      </New>
    </Arg>
  </Call>	
</Configure>

