<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:jaas="http://karaf.apache.org/xmlns/jaas/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0">

    <type-converters>
        <bean class="org.apache.karaf.jaas.modules.properties.PropertiesConverter"/>
    </type-converters>

    <!-- Allow usage of System properties, especially the karaf.base property -->
    <ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="]"/>

    <!--
     Each realm can contain one or more module definitions. Each module
     identifies a LoginModule and the className attribute must be set to the
     class name of the login module to use. Note that this login module must be
     available from the bundle classloader, so either it has to be defined in the
     bundle itself, or the needed package needs to be correctly imported. The
     flags attribute can take one of four values that are explained on the JAAS
     documentation.

     The content of the module element is parsed as a properties file and will be
     used to further configure the login module.
     Deploying such a code will lead to a JaasRealm object in the OSGi registry,
     which will then be used when using the JAAS login module.
   -->
    <jaas:config name="jetty">
        <jaas:module className="org.apache.karaf.jaas.modules.properties.PropertiesLoginModule" flags="required">
            users = $[karaf.base]/etc/users.properties
            role.policy = group
            role.discriminator = ROLES
            detailed.login.exception = true
        </jaas:module>
    </jaas:config>

    <!-- Don't forge to expose the BackingEngine as an OSGi service -->
    <service interface="org.apache.karaf.jaas.modules.BackingEngineFactory">
       <bean class="org.apache.karaf.jaas.modules.properties.PropertiesBackingEngineFactory"/>
    </service>
</blueprint>
